// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SectionTitle> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Styled(ViewNB)
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {
          "backgroundColor": "#dddddd",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
          "width": "100%",
        },
        Object {
          "marginTop": 10,
        },
      ]
    }
  >
    <Styled(Icon)
      name="home"
      style={
        Object {
          "marginRight": 5,
        }
      }
    />
    <Styled(ViewNB)
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Styled(Text)>
        Test Title
      </Styled(Text)>
    </Styled(ViewNB)>
    <Styled(ViewNB)>
      <Styled(Text)>
        right
      </Styled(Text)>
    </Styled(ViewNB)>
  </Styled(ViewNB)>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Icon)
          name="home"
          style={
            Object {
              "marginRight": 5,
            }
          }
        />,
        <Styled(ViewNB)
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <Styled(Text)>
            Test Title
          </Styled(Text)>
        </Styled(ViewNB)>,
        <Styled(ViewNB)>
          <Styled(Text)>
            right
          </Styled(Text)>
        </Styled(ViewNB)>,
      ],
      "style": Array [
        Object {},
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        Object {
          "backgroundColor": "#dddddd",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
          "width": "100%",
        },
        Object {
          "marginTop": 10,
        },
      ],
      "virtual": undefined,
    },
    "ref": [Function],
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "name": "home",
          "style": Object {
            "marginRight": 5,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Text)>
            Test Title
          </Styled(Text)>,
          "style": Object {
            "flex": 1,
          },
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Test Title",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "Test Title",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(Text)>
            right
          </Styled(Text)>,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "right",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "right",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Icon)
            name="home"
            style={
              Object {
                "marginRight": 5,
              }
            }
          />,
          <Styled(ViewNB)
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Styled(Text)>
              Test Title
            </Styled(Text)>
          </Styled(ViewNB)>,
          <Styled(ViewNB)>
            <Styled(Text)>
              right
            </Styled(Text)>
          </Styled(ViewNB)>,
        ],
        "style": Array [
          Object {},
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Object {
            "backgroundColor": "#dddddd",
            "paddingHorizontal": 20,
            "paddingVertical": 10,
            "width": "100%",
          },
          Object {
            "marginTop": 10,
          },
        ],
        "virtual": undefined,
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "name": "home",
            "style": Object {
              "marginRight": 5,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)>
              Test Title
            </Styled(Text)>,
            "style": Object {
              "flex": 1,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Test Title",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Test Title",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)>
              right
            </Styled(Text)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "right",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "right",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
